name: Deploy Frontend Service to ECS

on:
  push:
    branches: [ main ]
    paths:
      - 'my-app/**'
      - '.github/frontend-task-def.json'
  workflow_dispatch:

env:
  AWS_REGION: eu-north-1
  ECR_ACCOUNT: "067826606836"
  CLUSTER: api-cluster
  SERVICE: frontend-service
  API_URL: "http://api-alb-468565609.eu-north-1.elb.amazonaws.com"

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    outputs:
      fe_image_uri: ${{ steps.build.outputs.IMAGE_URI }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            ${{ env.AWS_REGION }}

      - name: Login to ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build & push Frontend image
        id: build
        run: |
          IMAGE_URI=${{ env.ECR_ACCOUNT }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.SERVICE }}:${{ github.sha }}
          docker build -t $IMAGE_URI -f my-app/Dockerfile my-app
          docker push $IMAGE_URI
          echo "image_uri=$IMAGE_URI" >> $GITHUB_OUTPUT

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            ${{ env.AWS_REGION }}

      - name: Render ECS task definition
        id: render
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: .github/frontend-task-def.json
          container-name:  frontend-service
          image:           ${{ needs.build-and-push.outputs.fe_image_uri }}
          environment-variables: |
            API_URL=${{ env.API_URL }}

      - name: Deploy to ECS
        id: ecs-deploy
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition:            ${{ steps.render.outputs.task-definition }}
          service:                    ${{ env.SERVICE }}
          cluster:                    ${{ env.CLUSTER }}
          wait-for-service-stability: true
